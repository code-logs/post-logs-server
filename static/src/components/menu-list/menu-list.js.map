{"version":3,"file":"menu-list.js","sourceRoot":"","sources":["../../../../src/components/menu-list/menu-list.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,KAAK,CAAA;AAC3C,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAA;AAC3D,OAAO,EAAE,QAAQ,EAAE,MAAM,6BAA6B,CAAA;AAItD,IAAa,QAAQ,GAArB,MAAa,QAAS,SAAQ,UAAU;IA+BtC;QACE,KAAK,EAAE,CAAA;QA9BT,UAAK,GAAW,EAAE,CAAA;QAGlB,gBAAW,GAAkB,IAAI,CAAA;QA4B/B,MAAM,CAAC,gBAAgB,CAAC,UAAU,EAAE,GAAG,EAAE;YACvC,IAAI,CAAC,aAAa,EAAE,CAAA;QACtB,CAAC,CAAC,CAAA;IACJ,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAA;;UAEL,IAAI,CAAC,KAAK;aACT,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC;aAC5B,GAAG,CACF,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,IAAI,CAAA;;;4BAGV,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;2BACzB,GAAG,EAAE;YACZ,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAA;QACxB,CAAC;6BACU,CAAC,KAAoB,EAAE,EAAE;YAClC,IAAI,KAAK,CAAC,GAAG,KAAK,OAAO,IAAI,KAAK,CAAC,GAAG,KAAK,OAAO,EAAE;gBAClD,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAA;aACvB;QACH,CAAC;;oBAEC,KAAK;;;aAGZ,CACF;;KAEN,CAAA;IACH,CAAC;IAEO,YAAY,CAAC,KAAa;QAChC,OAAO,MAAM,CAAC,QAAQ,CAAC,QAAQ,KAAK,KAAK,CAAA;IAC3C,CAAC;IAEO,UAAU,CAAC,KAAa;QAC9B,QAAQ,CAAC,KAAK,CAAC,CAAA;QACf,IAAI,CAAC,aAAa,EAAE,CAAA;IACtB,CAAC;CACF,CAAA;AAnEQ,eAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;GAsBlB,CAAA;AA3BD;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;uCACR;AAGlB;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;6CACM;AALtB,QAAQ;IADpB,aAAa,CAAC,WAAW,CAAC;GACd,QAAQ,CA0EpB;SA1EY,QAAQ","sourcesContent":["import { css, html, LitElement } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { navigate } from '../dom-router/dom-router.js'\nimport { Page } from '../dom-router/types/page.js'\n\n@customElement('menu-list')\nexport class MenuList extends LitElement {\n  @property({ type: Array })\n  menus: Page[] = []\n\n  @property({ type: String })\n  activeRoute: string | null = null\n\n  static styles = css`\n    ul {\n      list-style: none;\n      padding: 20px 0;\n      margin: 0;\n      display: flex;\n      gap: 20px;\n      justify-content: center;\n      border-bottom: 1px dashed var(--theme-red-color);\n    }\n    button {\n      border: 0;\n      background-color: transparent;\n      transition: transform 0.2s ease-in-out 0s;\n      color: inherit;\n    }\n    button:hover,\n    button[active] {\n      font-weight: 600;\n      transform: scale(1.5);\n      transition: transform 0.2s ease-in-out 0s;\n    }\n  `\n\n  constructor() {\n    super()\n    window.addEventListener('popstate', () => {\n      this.requestUpdate()\n    })\n  }\n\n  render() {\n    return html`\n      <ul>\n        ${this.menus\n          .filter((menu) => menu.title)\n          .map(\n            ({ title, route }) => html`\n              <li>\n                <button\n                  ?active=${this.isActiveMenu(route)}\n                  @click=${() => {\n                    this.moveToPage(route)\n                  }}\n                  @keydown=${(event: KeyboardEvent) => {\n                    if (event.key === 'enter' || event.key === 'space') {\n                      this.moveToPage(route)\n                    }\n                  }}\n                >\n                  ${title}\n                </button>\n              </li>\n            `\n          )}\n      </ul>\n    `\n  }\n\n  private isActiveMenu(route: string) {\n    return window.location.pathname === route\n  }\n\n  private moveToPage(route: string) {\n    navigate(route)\n    this.requestUpdate()\n  }\n}\n"]}