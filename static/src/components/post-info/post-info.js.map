{"version":3,"file":"post-info.js","sourceRoot":"","sources":["../../../../src/components/post-info/post-info.ts"],"names":[],"mappings":"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","sourcesContent":["import { css, html, LitElement } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { apis } from '../../apis/index.js'\nimport { Post, TempPost } from '../../types/post.js'\nimport { toLocalizedDateInputValue } from '../../utils/date-util.js'\nimport { h2Style, inputStyle, sectionStyle } from '../styles/styles.js'\n// eslint-disable-next-line import/no-duplicates\nimport '../reference-selector/reference-selector.js'\n// eslint-disable-next-line import/no-duplicates\nimport { ReferenceSelector } from '../reference-selector/reference-selector.js'\n// eslint-disable-next-line import/no-duplicates\nimport '../tag-selector/tag-selector.js'\n// eslint-disable-next-line import/no-duplicates\nimport { TagSelector } from '../tag-selector/tag-selector.js'\nimport { BASE_URL } from '../../constants/base-url.js'\n\ntype PostFormType = Omit<\n  Post,\n  'fileName' | 'thumbnailName' | 'tags' | 'references' | 'series'\n> & { prevPostTitle: string; nextPostTitle: string }\n@customElement('post-info')\nexport class PostInfo extends LitElement {\n  @property({ type: Object })\n  post?: Post\n\n  @property({ type: String })\n  content!: string\n\n  @property({ type: Array })\n  private categories: string[] = []\n\n  @property({ type: Array })\n  private posts: Post[] = []\n\n  @property({ type: String })\n  thumbnailObjURL?: string\n\n  @property({ type: Boolean })\n  createMode: boolean = false\n\n  static styles = css`\n    ${sectionStyle}\n    ${h2Style}\n    ${inputStyle}\n    :host {\n      font-family: sans-serif;\n      color: var(--theme-font-color);\n      font-size: 0.8rem;\n      display: grid;\n      grid-template-columns: 1fr;\n      gap: 10px;\n    }\n    form {\n      display: grid;\n      grid-template-columns: repeat(4, 1fr);\n      gap: 10px;\n    }\n    form > label {\n      display: grid;\n      grid-template-rows: auto 1fr;\n      gap: 5px;\n    }\n    form > label.description {\n      grid-column: 1 / 5;\n    }\n    form > label.description > input {\n      max-width: inherit;\n    }\n    #thumbnail-selector {\n      display: grid;\n    }\n    #thumbnail-selector img {\n      margin: 10px auto;\n    }\n    #thumbnail-selector .thumbnail-preview {\n      max-height: 300px;\n      max-width: 100%;\n    }\n  `\n\n  private get thumbnailInput() {\n    const input =\n      this.renderRoot.querySelector<HTMLInputElement>('#thumbnail-input')\n    if (!input) throw new Error('Failed to find input')\n\n    return input\n  }\n\n  private get tagSelector() {\n    const tagSelector =\n      this.renderRoot.querySelector<TagSelector>('tag-selector')\n    if (!tagSelector) throw new Error('Failed to find tag selector')\n\n    return tagSelector\n  }\n\n  private get refSelector() {\n    const refSelector =\n      this.renderRoot.querySelector<ReferenceSelector>('reference-selector')\n    if (!refSelector) throw new Error('Failed to find reference selector')\n\n    return refSelector\n  }\n\n  protected firstUpdated() {\n    this.fetchPosts()\n    this.fetchCategories()\n  }\n\n  private async fetchCategories() {\n    this.categories = await apis.getCategories()\n  }\n\n  private async fetchPosts() {\n    this.posts = await apis.getPosts()\n  }\n\n  private get form() {\n    const form = this.renderRoot.querySelector('form')\n    if (!form) throw new Error('Failed to find form element')\n\n    return form\n  }\n\n  public serialize(): { tempPost: TempPost; thumbnail?: File } {\n    const {\n      title,\n      description,\n      category,\n      publishedAt,\n      published = false,\n      nextPostTitle,\n      prevPostTitle,\n    } = Object.fromEntries(new FormData(this.form)) as unknown as PostFormType\n    if (!title) throw new Error('포스팅의 제목을 입력해 주세요.')\n    if (!category) throw new Error('포스팅의 카테고리를 선택해 주세요.')\n    if (!this.createMode && !publishedAt)\n      throw new Error('포스팅 작성일을 선택해 주세요.')\n    if (!description) throw new Error('포스팅의 설명을 입력해 주세요.')\n    if (!this.thumbnailInput.files?.length && !this.post?.thumbnailName)\n      throw new Error('포스팅 썸네일 이미지를 선택해 주세요.')\n\n    const tags = this.tagSelector.selectedTags\n    if (!tags.length) throw new Error('포스팅의 태그를 선택해 주세요.')\n\n    const references = this.refSelector.selectedRefs\n\n    const tempPost: TempPost = {\n      title,\n      category,\n      publishedAt,\n      published: Boolean(published),\n      description,\n      fileName: `${category.toLowerCase()}-${title.toLowerCase()}.md`.replace(\n        / +/g,\n        '-'\n      ),\n      tags,\n      references,\n    }\n\n    if (prevPostTitle) tempPost.series = { prevPostTitle }\n    if (nextPostTitle) tempPost.series = { ...tempPost.series, nextPostTitle }\n\n    const result: { tempPost: TempPost; thumbnail?: File } = {\n      tempPost,\n    }\n\n    if (this.thumbnailInput.files?.[0]) {\n      const [thumbnail] = this.thumbnailInput.files\n      result.thumbnail = thumbnail\n    }\n\n    return result\n  }\n\n  render() {\n    return html`\n      <section class=\"container\">\n        <h2>Info</h2>\n        <form>\n          <label>\n            <span>제목</span>\n            <input name=\"title\" .value=${this.post?.title || ''} />\n          </label>\n\n          <label>\n            <span>카테고리</span>\n            <input\n              list=\"category\"\n              name=\"category\"\n              .value=${this.post?.category || ''}\n            />\n            <datalist id=\"category\">\n              ${this.categories.map(\n                (category) => html`<option>${category}</option>`\n              )}\n            </datalist>\n          </label>\n\n          <label>\n            <span>작성일</span>\n            <input\n              name=\"publishedAt\"\n              type=\"date\"\n              .value=${this.post?.publishedAt ||\n              toLocalizedDateInputValue(Date.now())}\n            />\n          </label>\n\n          <label>\n            <span>배포여부</span>\n            <input\n              name=\"published\"\n              type=\"checkbox\"\n              ?checked=${this.post?.published || false}\n            />\n          </label>\n\n          <label>\n            <span>이전글</span>\n            <select name=\"prevPostTitle\">\n              <option></option>\n              ${this.posts.map(\n                (post) =>\n                  html`<option\n                    ?selected=${this.post?.series?.prevPostTitle === post.title}\n                  >\n                    ${post.title}\n                  </option>`\n              )}\n            </select>\n          </label>\n\n          <label>\n            <span>다음글</span>\n            <select name=\"nextPostTitle\">\n              <option></option>\n              ${this.posts.map(\n                (post) =>\n                  html`<option\n                    ?selected=${this.post?.series?.nextPostTitle === post.title}\n                  >\n                    ${post.title}\n                  </option>`\n              )}\n            </select>\n          </label>\n\n          <label class=\"description\">\n            <span>설명</span>\n            <input name=\"description\" .value=${this.post?.description || ''} />\n          </label>\n        </form>\n      </section>\n\n      <section id=\"thumbnail-selector\" class=\"container\">\n        <h2>Thumbnail</h2>\n        <input\n          id=\"thumbnail-input\"\n          name=\"thumbnailName\"\n          type=\"file\"\n          accept=\"image/png\"\n          @input=${(event: Event) => {\n            const fileInput = event.currentTarget as HTMLInputElement\n            if (fileInput.files?.[0]) {\n              this.thumbnailObjURL = window.URL.createObjectURL(\n                fileInput.files[0]\n              )\n            } else {\n              this.thumbnailObjURL = undefined\n            }\n          }}\n        />\n\n        ${this.post?.thumbnailName || this.thumbnailObjURL\n          ? html`<img\n              class=\"thumbnail-preview\"\n              src=${this.thumbnailObjURL\n                ? this.thumbnailObjURL\n                : `${BASE_URL}/${this.post?.thumbnailName}`}\n              alt=${this.post?.thumbnailName || 'Thumbnail preview'}\n            />`\n          : ''}\n      </section>\n\n      <tag-selector .chosenTags=${this.post?.tags || []}></tag-selector>\n\n      <reference-selector\n        .references=${this.post?.references || []}\n        .content=${this.content}\n      ></reference-selector>\n    `\n  }\n}\n"]}