{"version":3,"file":"markdown-editor.js","sourceRoot":"","sources":["../../../../src/components/markdown-editor/markdown-editor.ts"],"names":[],"mappings":"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","sourcesContent":["import { css, html, LitElement } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport StringUtil from '../../utils/string-util.js'\n\n@customElement('markdown-editor')\nexport class MarkdownEditor extends LitElement {\n  @property({ type: String })\n  value: string = ''\n\n  private set _value(value: string) {\n    this.dispatchValueChangeEvent(value)\n  }\n\n  static styles = css`\n    :host {\n      display: flex;\n    }\n    #editor {\n      font-family: sans-serif;\n      color: var(--theme-font-color);\n      font-size: 14px;\n      background-color: var(--theme-light-background-color);\n      padding: 10px;\n      border: 1px dashed var(--theme-red-color);\n      width: 100%;\n      height: 700px;\n      outline: none;\n      tab-size: 2;\n      overflow: auto;\n      box-sizing: border-box;\n      resize: none;\n    }\n    #editor:focus {\n      border-style: solid;\n    }\n    #editor::-webkit-scrollbar {\n      cursor: default;\n      width: 5px;\n    }\n    #editor::-webkit-scrollbar-thumb {\n      background-color: var(--theme-red-color);\n    }\n  `\n\n  private dispatchValueChangeEvent(value: string) {\n    this.dispatchEvent(\n      new CustomEvent('valueChange', { detail: { value }, composed: true })\n    )\n  }\n\n  private dispatchChangeEvent() {\n    this.dispatchEvent(\n      new CustomEvent('change', {\n        detail: { value: this.value },\n        composed: true,\n      })\n    )\n  }\n\n  get editor() {\n    const editor = this.renderRoot.querySelector<HTMLTextAreaElement>('#editor')\n    if (!editor) throw new Error('Failed to find editor')\n    return editor\n  }\n\n  private keydownHandler(event: KeyboardEvent) {\n    const { key, shiftKey, metaKey, ctrlKey } = event\n    if (key === 'Tab') {\n      event.preventDefault()\n\n      if (shiftKey) {\n        this.unTab()\n      } else {\n        this.doTab()\n      }\n    }\n\n    if (key === 'Enter') {\n      if (this.duplicatePrevFragment()) {\n        event.preventDefault()\n      }\n    }\n\n    if (metaKey || ctrlKey) {\n      if (key === '[') {\n        event.preventDefault()\n        this.unTab()\n      }\n\n      if (key === ']') {\n        event.preventDefault()\n        this.appendTab()\n      }\n    }\n  }\n\n  private getFrontContent() {\n    const { selectionStart } = this.editor\n    const front = StringUtil.splitByIndex(this.value, selectionStart)[0]\n    const phrases = front.split('\\n')\n    return phrases[phrases.length - 1]\n  }\n\n  private duplicatePrevFragment() {\n    const prevLineContent = this.getFrontContent()\n    const regex = /(.?)+([0-9]\\.|- |> )/\n    if (regex.test(prevLineContent)) {\n      const matched = prevLineContent.match(regex)\n      if (matched) {\n        this.appendText(`\\n${matched[0]}`)\n        return true\n      }\n    }\n\n    return false\n  }\n\n  private placeCaret(range: number) {\n    this.editor.setSelectionRange(range, range)\n  }\n\n  private getCurrentLineIndex() {\n    const { selectionStart } = this.editor\n    const front = StringUtil.splitByIndex(this.value, selectionStart)[0]\n    return front.split('\\n').length - 1\n  }\n\n  private async appendText(text: string) {\n    const { selectionStart, selectionEnd } = this.editor\n    const front = StringUtil.splitByIndex(this.value, selectionStart)[0]\n    const rear = StringUtil.splitByIndex(this.value, selectionEnd)[1]\n    this._value = `${front}${text}${rear}`\n    await this.updateComplete\n    this.editor.setSelectionRange(\n      selectionStart + text.length,\n      selectionStart + text.length\n    )\n  }\n\n  private async appendTab() {\n    const { selectionStart } = this.editor\n    const currentLineIndex = this.getCurrentLineIndex()\n\n    this._value = this.value\n      .split('\\n')\n      .map((phrase, index) => {\n        if (index !== currentLineIndex) return phrase\n        return `\\t${phrase}`\n      })\n      .join('\\n')\n\n    await this.updateComplete\n    this.placeCaret(selectionStart + 1)\n  }\n\n  private doTab() {\n    this.appendText('\\t')\n  }\n\n  private async unTab() {\n    const currentLineContent = this.getFrontContent()\n    if (/^( |\\t)/.test(currentLineContent)) {\n      const { selectionStart } = this.editor\n      const currentLineIndex = this.getCurrentLineIndex()\n\n      this._value = this.value\n        .split('\\n')\n        .map((phrase, index) => {\n          if (index !== currentLineIndex) return phrase\n\n          return phrase.replace(/^( |\\t)/, '')\n        })\n        .join('\\n')\n\n      await this.updateComplete\n      this.placeCaret(selectionStart - 1)\n    }\n  }\n\n  public reset() {\n    this._value = ''\n    this.editor.value = ''\n  }\n\n  public focus() {\n    this.editor.focus()\n  }\n\n  render() {\n    return html`\n      <textarea\n        id=\"editor\"\n        @keydown=${this.keydownHandler}\n        @input=${() => {\n          this._value = this.editor.value\n        }}\n        .value=${this.value}\n        @change=${() => {\n          this.dispatchChangeEvent()\n        }}\n      ></textarea>\n    `\n  }\n}\n"]}