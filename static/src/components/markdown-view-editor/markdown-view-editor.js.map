{"version":3,"file":"markdown-view-editor.js","sourceRoot":"","sources":["../../../../src/components/markdown-view-editor/markdown-view-editor.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,KAAK,CAAA;AAC3C,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAA;AAC3D,OAAO,uCAAuC,CAAA;AAC9C,OAAO,yCAAyC,CAAA;AAGhD,IAAa,kBAAkB,GAA/B,MAAa,kBAAmB,SAAQ,UAAU;IAAlD;;QAEE,kBAAa,GAAa,KAAK,CAAA;QAG/B,YAAO,GAAW,EAAE,CAAA;IA4CtB,CAAC;IA7BC,MAAM;QACJ,OAAO,IAAI,CAAA;;;;;;;yBAOU,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC;wBAC5B,GAAG,EAAE;YACb,IAAI,CAAC,aAAa,GAAG,CAAC,IAAI,CAAC,aAAa,CAAA;QAC1C,CAAC;;;;;UAKL,IAAI,CAAC,aAAa;YAClB,CAAC,CAAC,IAAI,CAAA;0BACU,IAAI,CAAC,OAAO;iCACL;YACvB,CAAC,CAAC,IAAI,CAAA;uBACO,IAAI,CAAC,OAAO;6BACN,CAAC,KAAkB,EAAE,EAAE;gBACpC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAA;YACnC,CAAC;gCACiB;;KAE3B,CAAA;IACH,CAAC;CACF,CAAA;AA1CQ,yBAAM,GAAG,GAAG,CAAA;;;;;;;;;;;GAWlB,CAAA;AAhBD;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;yDACG;AAG/B;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;mDACP;AALT,kBAAkB;IAD9B,aAAa,CAAC,sBAAsB,CAAC;GACzB,kBAAkB,CAiD9B;SAjDY,kBAAkB","sourcesContent":["import { css, html, LitElement } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport '../markdown-editor/markdown-editor.js'\nimport '../markdown-preview/markdown-preview.js'\n\n@customElement('markdown-view-editor')\nexport class MarkdownViewEditor extends LitElement {\n  @property({ type: Boolean })\n  enablePreview?: boolean = false\n\n  @property({ type: String })\n  content: string = ''\n\n  static styles = css`\n    #header {\n      margin-bottom: 10px;\n    }\n    #header label {\n      display: inline-flex;\n    }\n    #header span {\n      font-size: 0.8rem;\n      margin: auto 0;\n    }\n  `\n\n  render() {\n    return html`\n      <section>\n        <header id=\"header\">\n          <label>\n            <span>Preview</span>\n            <input\n              type=\"checkbox\"\n              .checked=${Boolean(this.enablePreview)}\n              @change=${() => {\n                this.enablePreview = !this.enablePreview\n              }}\n            />\n          </label>\n        </header>\n\n        ${this.enablePreview\n          ? html`<markdown-preview\n              .markdown=${this.content}\n            ></markdown-preview>`\n          : html`<markdown-editor\n              .value=${this.content}\n              @valueChange=${(event: CustomEvent) => {\n                this.content = event.detail.value\n              }}\n            ></markdown-editor>`}\n      </section>\n    `\n  }\n}\n"]}