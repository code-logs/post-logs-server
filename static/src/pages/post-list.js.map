{"version":3,"file":"post-list.js","sourceRoot":"","sources":["../../../src/pages/post-list.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,KAAK,CAAA;AAC/B,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAA;AAC3D,OAAO,EAAE,IAAI,EAAE,MAAM,kBAAkB,CAAA;AACvC,OAAO,sCAAsC,CAAA;AAC7C,OAAO,EAAE,UAAU,EAAE,UAAU,EAAE,MAAM,gCAAgC,CAAA;AAEvE,OAAO,EAAE,WAAW,EAAE,MAAM,6BAA6B,CAAA;AAGzD,IAAa,QAAQ,GAArB,MAAa,QAAS,SAAQ,WAAW;IAAzC;;QACE,cAAS,GAAW,iBAAiB,CAAA;QAGrC,UAAK,GAAW,EAAE,CAAA;QAGlB,YAAO,GAAW,EAAE,CAAA;IAmEtB,CAAC;IA/CW,YAAY;QACpB,IAAI,CAAC,UAAU,EAAE,CAAA;IACnB,CAAC;IAED,KAAK,CAAC,UAAU;QACd,IAAI,CAAC,KAAK,GAAG,MAAM,IAAI,CAAC,QAAQ,EAAE,CAAA;IACpC,CAAC;IAED,MAAM;QACJ,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE;YACvC,IAAI,CAAC,IAAI,CAAC,OAAO;gBAAE,OAAO,IAAI,CAAA;YAE9B,OAAO,CACL,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI;iBACtC,GAAG,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,IAAI,CAAC;iBACvB,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,EAAE;iBAClB,WAAW,EAAE;iBACb,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAC9B,CAAA;QACH,CAAC,CAAC,CAAA;QAEF,OAAO,IAAI,CAAA;;;;;;;;uBAQQ,CAAC,KAAY,EAAE,EAAE;YACxB,MAAM,KAAK,GAAG,KAAK,CAAC,aAAiC,CAAA;YACrD,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,KAAK,CAAA;QAC5B,CAAC;;;;;YAKH,KAAK,CAAC,GAAG,CACT,CAAC,IAAI,EAAE,EAAE,CACP,IAAI,CAAA;mCACiB,IAAI;oBACnB,CACT;;;KAGN,CAAA;IACH,CAAC;CACF,CAAA;AAjEQ,eAAM,GAAG,GAAG,CAAA;MACf,UAAU;MACV,UAAU;;;;;;;;;;;;;;GAcb,CAAA;AArBD;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;uCACR;AAGlB;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;yCACP;AAPT,QAAQ;IADpB,aAAa,CAAC,WAAW,CAAC;GACd,QAAQ,CA0EpB;SA1EY,QAAQ","sourcesContent":["import { css, html } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { apis } from '../apis/index.js'\nimport '../components/post-card/post-card.js'\nimport { inputStyle, labelStyle } from '../components/styles/styles.js'\nimport { Post } from '../types/post.js'\nimport { PageElement } from './abstracts/page-element.js'\n\n@customElement('post-list')\nexport class PostList extends PageElement {\n  pageTitle: string = 'Post Logs | 포스팅'\n\n  @property({ type: Array })\n  posts: Post[] = []\n\n  @property({ type: String })\n  keyword: string = ''\n\n  static styles = css`\n    ${labelStyle}\n    ${inputStyle}\n    #post-list {\n      display: grid;\n      gap: 10px;\n    }\n    #search-form {\n      display: grid;\n      grid-template-columns: repeat(4, 1fr);\n    }\n    ul {\n      margin: 0;\n      padding: 0;\n      list-style: none;\n    }\n  `\n\n  protected firstUpdated() {\n    this.fetchPosts()\n  }\n\n  async fetchPosts() {\n    this.posts = await apis.getPosts()\n  }\n\n  render() {\n    const posts = this.posts.filter((post) => {\n      if (!this.keyword) return true\n\n      return (\n        `${post.title}${post.category}${post.tags\n          .map(({ name }) => name)\n          .join(',')}${post}`\n          .toLowerCase()\n          .indexOf(this.keyword) >= 0\n      )\n    })\n\n    return html`\n      <section id=\"post-list\">\n        <form id=\"search-form\">\n          <label>\n            <span>Keyword</span>\n            <input\n              type=\"search\"\n              placeholder=\"Search...\"\n              @input=${(event: Event) => {\n                const input = event.currentTarget as HTMLInputElement\n                this.keyword = input.value\n              }}\n            />\n          </label>\n        </form>\n        <ul>\n          ${posts.map(\n            (post) =>\n              html`<li>\n                <post-card .post=${post}></post-card>\n              </li>`\n          )}\n        </ul>\n      </section>\n    `\n  }\n}\n"]}