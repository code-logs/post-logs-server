{"version":3,"file":"app-config.js","sourceRoot":"","sources":["../../../src/pages/app-config.ts"],"names":[],"mappings":"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","sourcesContent":["import { css, html } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { apis } from '../apis/index.js'\n// eslint-disable-next-line import/no-duplicates\nimport '../components/markdown-editor/markdown-editor.js'\n// eslint-disable-next-line import/no-duplicates\nimport { MarkdownEditor } from '../components/markdown-editor/markdown-editor.js'\nimport {\n  buttonBoxStyle,\n  h2Style,\n  inputStyle,\n  labelStyle,\n  sectionStyle,\n} from '../components/styles/styles.js'\nimport { toLocalizedDatetimeInputValue } from '../utils/date-util.js'\nimport { PageElement } from './abstracts/page-element.js'\n\n@customElement('app-config')\nexport class AppConfig extends PageElement {\n  pageTitle: string = 'Post Logs | 설정'\n\n  @property({ type: Number })\n  private lastSyncDatetime: number | null = null\n\n  @property({ type: String })\n  private template: string | null = null\n\n  private templateContent?: string\n\n  static styles = css`\n    ${sectionStyle}\n    ${h2Style}\n    ${labelStyle}\n    ${inputStyle}\n    ${buttonBoxStyle}\n    :host {\n      font-size: 0.8rem;\n    }\n    #config {\n      display: grid;\n      grid-template-columns: 1fr;\n      gap: 10px;\n    }\n    input#sync-date-input {\n      max-width: inherit;\n      text-align: center;\n    }\n    p {\n      font-size: 0.8rem;\n      text-align: center;\n    }\n    markdown-editor {\n      margin-top: 10px;\n    }\n    .button-container {\n      margin-top: 10px;\n    }\n\n    #template-list {\n      margin: 10px 0;\n      padding: 0;\n      list-style: none;\n    }\n  `\n\n  private get markdownEditor() {\n    const editor =\n      this.renderRoot.querySelector<MarkdownEditor>('markdown-editor')\n    if (!editor) throw new Error('Failed to find markdown editor')\n\n    return editor\n  }\n\n  protected async firstUpdated() {\n    this.refreshLastSyncDatetime()\n    this.fetchTemplate()\n  }\n\n  private async refreshLastSyncDatetime() {\n    this.lastSyncDatetime = await apis.getLastSyncDatetime()\n  }\n\n  private async fetchTemplate() {\n    this.template = await apis.getTemplate()\n  }\n\n  private async syncRepository() {\n    if (this.lastSyncDatetime) {\n      const answer = window.confirm(\n        '기존 포스팅 데이터를 삭제하고 저장소와 동기화 하시겠습니까?'\n      )\n\n      if (!answer) return\n    }\n\n    await apis.syncRepository()\n    await this.refreshLastSyncDatetime()\n  }\n\n  private async saveTemplate() {\n    if (!this.templateContent) {\n      alert('템플릿을 입력해 주세요')\n      this.markdownEditor.focus()\n      return\n    }\n    const content = this.templateContent\n\n    await apis.saveTemplate(content)\n    alert('새로운 템플릿이 등록 됐습니다.')\n    this.fetchTemplate()\n  }\n\n  render() {\n    return html`<section id=\"config\">\n      <section id=\"template\" class=\"container\">\n        <header>\n          <h2>Template</h2>\n        </header>\n\n        <markdown-editor\n          @valueChange=${(event: CustomEvent<{ value: string }>) => {\n            const { value } = event.detail\n            this.templateContent = value\n          }}\n          .value=${this.template || ''}\n        ></markdown-editor>\n\n        <section class=\"button-container\">\n          <button @click=${this.saveTemplate}>Save Template</button>\n        </section>\n      </section>\n\n      <section id=\"repo-sync\" class=\"container\">\n        <header>\n          <h2>Repository Sync</h2>\n        </header>\n\n        ${this.lastSyncDatetime\n          ? html`\n              <label>\n                <span>최근 동기화</span>\n                <input\n                  id=\"sync-date-input\"\n                  type=\"datetime-local\"\n                  readonly\n                  .value=${toLocalizedDatetimeInputValue(this.lastSyncDatetime)}\n                />\n              </label>\n            `\n          : html`<p>최근 동기화 기록이 존재하지 않습니다.</p>\n              <p>Sync 버튼을 통해 저장소 동기화를 진행해 주세요</p> `}\n\n        <section class=\"button-container\">\n          <button @click=${this.syncRepository}>Sync</button>\n        </section>\n      </section>\n    </section> `\n  }\n}\n"]}