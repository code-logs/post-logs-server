{"version":3,"file":"deploy-post.js","sourceRoot":"","sources":["../../../src/pages/deploy-post.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,KAAK,CAAA;AAC/B,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAA;AAC3D,OAAO,EAAE,IAAI,EAAE,MAAM,kBAAkB,CAAA;AACvC,OAAO,EAAE,QAAQ,EAAE,MAAM,wCAAwC,CAAA;AACjE,OAAO,sCAAsC,CAAA;AAC7C,OAAO,EACL,cAAc,EACd,OAAO,EACP,YAAY,GACb,MAAM,gCAAgC,CAAA;AAEvC,OAAO,EAAE,WAAW,EAAE,MAAM,6BAA6B,CAAA;AAGzD,IAAa,UAAU,GAAvB,MAAa,UAAW,SAAQ,WAAW;IAA3C;;QACE,cAAS,GAAW,oBAAoB,CAAA;QAGxC,kBAAa,GAAW,EAAE,CAAA;IA4F5B,CAAC;IA9DW,YAAY;QACpB,IAAI,CAAC,kBAAkB,EAAE,CAAA;IAC3B,CAAC;IAED,KAAK,CAAC,kBAAkB;QACtB,IAAI,CAAC,aAAa,GAAG,MAAM,IAAI,CAAC,gBAAgB,EAAE,CAAA;IACpD,CAAC;IAEO,KAAK,CAAC,WAAW;QACvB,MAAM,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,eAAe,CAAC,CAAA;QAC9C,IAAI,CAAC,MAAM;YAAE,OAAM;QACnB,MAAM,IAAI,CAAC,WAAW,EAAE,CAAA;QACxB,MAAM,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAA;QAC9B,QAAQ,CAAC,GAAG,CAAC,CAAA;IACf,CAAC;IAED,MAAM;QACJ,MAAM,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,EAAE,SAAS,EAAE,EAAE,EAAE,CAAC,SAAS,CAAC,CAAA;QAC5E,MAAM,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAC5C,CAAC,EAAE,SAAS,EAAE,SAAS,EAAE,EAAE,EAAE,CAAC,CAAC,SAAS,IAAI,SAAS,CACtD,CAAA;QAED,OAAO,IAAI,CAAA;UACL,CAAC,YAAY,CAAC,MAAM,IAAI,CAAC,YAAY,CAAC,MAAM;YAC5C,CAAC,CAAC,IAAI,CAAA,yBAAyB;YAC/B,CAAC,CAAC,EAAE;UACJ,YAAY,CAAC,MAAM;YACnB,CAAC,CAAC,IAAI,CAAA;;;kBAGE,YAAY,CAAC,GAAG,CAChB,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAA;;yCAES,IAAI;;mBAE1B,CACF;;uBAEM;YACb,CAAC,CAAC,EAAE;UACJ,YAAY,CAAC,MAAM;YACnB,CAAC,CAAC,IAAI,CAAA;;;kBAGE,YAAY,CAAC,GAAG,CAChB,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAA;;yCAES,IAAI;;mBAE1B,CACF;;uBAEM;YACb,CAAC,CAAC,EAAE;;;QAGN,YAAY,CAAC,MAAM,IAAI,YAAY,CAAC,MAAM;YAC1C,CAAC,CAAC,IAAI,CAAA;oCACsB,IAAI,CAAC,WAAW;sBAC9B;YACd,CAAC,CAAC,EAAE,GAAG,CAAA;IACb,CAAC;CACF,CAAA;AA1FQ,iBAAM,GAAG,GAAG,CAAA;;;;;;;;MAQf,YAAY;MACZ,OAAO;MACP,cAAc;;;;;;;;;;;;;;;;GAgBjB,CAAA;AA5BD;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;iDACA;AAJf,UAAU;IADtB,aAAa,CAAC,aAAa,CAAC;GAChB,UAAU,CAgGtB;SAhGY,UAAU","sourcesContent":["import { css, html } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { apis } from '../apis/index.js'\nimport { navigate } from '../components/dom-router/dom-router.js'\nimport '../components/post-card/post-card.js'\nimport {\n  buttonBoxStyle,\n  h2Style,\n  sectionStyle,\n} from '../components/styles/styles.js'\nimport { Post } from '../types/post.js'\nimport { PageElement } from './abstracts/page-element.js'\n\n@customElement('deploy-post')\nexport class DeployPost extends PageElement {\n  pageTitle: string = 'Post Logs | Deploy'\n\n  @property({ type: Array })\n  modifiedPosts: Post[] = []\n\n  static styles = css`\n    :host {\n      font-size: 0.8rem;\n    }\n    #deploy-post {\n      display: grid;\n      gap: 10px;\n    }\n    ${sectionStyle}\n    ${h2Style}\n    ${buttonBoxStyle}\n    ul {\n      margin: 0;\n      padding: 0;\n      list-style: none;\n    }\n    li {\n      margin: 0;\n      padding: 0;\n    }\n    p {\n      text-align: center;\n    }\n    .button-container {\n      margin-top: 10px;\n    }\n  `\n\n  protected firstUpdated() {\n    this.fetchModifiedPosts()\n  }\n\n  async fetchModifiedPosts() {\n    this.modifiedPosts = await apis.getModifiedPosts()\n  }\n\n  private async deployPosts() {\n    const answer = window.confirm('변경 사항을 배포할까요?')\n    if (!answer) return\n    await apis.deployPosts()\n    window.alert('변경사항이 배포 됐습니다.')\n    navigate('/')\n  }\n\n  render() {\n    const createdPosts = this.modifiedPosts.filter(({ isCreated }) => isCreated)\n    const updatedPosts = this.modifiedPosts.filter(\n      ({ isCreated, isUpdated }) => !isCreated && isUpdated\n    )\n\n    return html`<section id=\"deploy-post\" class=\"container\">\n        ${!createdPosts.length && !updatedPosts.length\n          ? html` <p>배포할 포스팅이 없습니다.</p> `\n          : ''}\n        ${createdPosts.length\n          ? html`<section id=\"created-posts\">\n              <h2>새로운 포스팅</h2>\n              <ul>\n                ${createdPosts.map(\n                  (post) => html`\n                    <li>\n                      <post-card .post=${post}></post-card>\n                    </li>\n                  `\n                )}\n              </ul>\n            </section>`\n          : ''}\n        ${updatedPosts.length\n          ? html`<section id=\"created-posts\">\n              <h2>수정된 포스팅</h2>\n              <ul>\n                ${updatedPosts.map(\n                  (post) => html`\n                    <li>\n                      <post-card .post=${post}></post-card>\n                    </li>\n                  `\n                )}\n              </ul>\n            </section>`\n          : ''}\n      </section>\n\n      ${createdPosts.length || updatedPosts.length\n        ? html`<section class=\"button-container\">\n            <button danger @click=${this.deployPosts}>배포</button>\n          </section> `\n        : ''} `\n  }\n}\n"]}