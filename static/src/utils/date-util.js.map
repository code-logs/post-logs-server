{"version":3,"file":"date-util.js","sourceRoot":"","sources":["../../../src/utils/date-util.ts"],"names":[],"mappings":"AAAA,MAAM,CAAC,MAAM,6BAA6B,GAAG,CAAC,SAAiB,EAAE,EAAE;IACjE,MAAM,cAAc,GAAG,IAAI,IAAI,EAAE,CAAC,iBAAiB,EAAE,CAAA;IACrD,OAAO,IAAI,IAAI,CAAC,SAAS,GAAG,cAAc,GAAG,EAAE,GAAG,IAAI,CAAC;SACpD,WAAW,EAAE;SACb,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;AAClB,CAAC,CAAA;AAED,MAAM,CAAC,MAAM,yBAAyB,GAAG,CAAC,SAAiB,EAAE,EAAE;IAC7D,MAAM,cAAc,GAAG,IAAI,IAAI,EAAE,CAAC,iBAAiB,EAAE,CAAA;IACrD,OAAO,IAAI,IAAI,CAAC,SAAS,GAAG,cAAc,GAAG,EAAE,GAAG,IAAI,CAAC;SACpD,WAAW,EAAE;SACb,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAA;AACjB,CAAC,CAAA","sourcesContent":["export const toLocalizedDatetimeInputValue = (timestamp: number) => {\n  const timezoneOffset = new Date().getTimezoneOffset()\n  return new Date(timestamp - timezoneOffset * 60 * 1000)\n    .toISOString()\n    .split('.')[0]\n}\n\nexport const toLocalizedDateInputValue = (timestamp: number) => {\n  const timezoneOffset = new Date().getTimezoneOffset()\n  return new Date(timestamp - timezoneOffset * 60 * 1000)\n    .toISOString()\n    .slice(0, 10)\n}\n"]}